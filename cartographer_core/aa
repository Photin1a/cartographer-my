cmake_minimum_required(VERSION 3.0.2)
project(goal_selector)
set(CMAKE_BUILD_TYPE Release)
cmake_policy(SET CMP0057 NEW)

set(CMAKE_EXPORT_COMPILE_COMMANDS on)


# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 17)
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -pthread")  #std::thread  must be to linux   

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(nav2_util REQUIRED)
# find_package(nav2_msgs REQUIRED)
find_package(std_msgs REQUIRED)
find_package(tf2_geometry_msgs REQUIRED)
find_package(robot_msgs REQUIRED)


include_directories(
  include
)

add_executable(goal_action_client_node src/goal_action_client_node.cpp)
ament_target_dependencies(goal_action_client_node 
  geometry_msgs
  nav2_util
  # nav2_msgs
  rclcpp
  # rclcpp_lifecycle
  std_msgs
  tf2_geometry_msgs
  robot_msgs
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

install(TARGETS goal_action_client_node
  DESTINATION lib/${PROJECT_NAME})

install(DIRECTORY launch
  DESTINATION share/${PROJECT_NAME})
ament_package()
